services:
  database:
    image: postgres:16
    container_name: lessons-marketplace-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ..
      dockerfile: docker/server/Dockerfile
    container_name: lessons-marketplace-server
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSL=${DB_SSL:-false}
      - PORT=${PORT:-3000}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN}
      - FRONTEND_URL=${FRONTEND_URL}
      - LOG_LEVEL=${LOG_LEVEL:-2}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@database:5432/${DB_NAME}?schema=public
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    volumes:
      - ../dist:/app/dist
      - ../node_modules:/app/node_modules

  frontend:
    build:
      context: ..
      dockerfile: docker/frontend/Dockerfile
    container_name: lessons-marketplace-frontend
    restart: unless-stopped
    depends_on:
      - server
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - VITE_API_BASE_URL=http://server:${PORT:-3000}
      - VITE_LOG_LEVEL=${VITE_LOG_LEVEL:-2}
      - FRONTEND_URL=${FRONTEND_URL}
    ports:
      - "5173:80"
    volumes:
      - ../dist:/app/dist
      - ../node_modules:/app/node_modules

volumes:
  postgres_data: 