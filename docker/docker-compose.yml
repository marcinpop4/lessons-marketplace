services:
  database:
    build:
      context: ..
      dockerfile: docker/database/Dockerfile
    container_name: lessons-marketplace-db-${profile}
    restart: "no"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - ../env/.env.${profile}
    profiles: ["ci", "prod"]

  database-ci:
    extends: database
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U marcin -d lessons_marketplace && psql -U marcin -d lessons_marketplace -c 'SELECT 1' || exit 1"]
      interval: 2s      # Check more frequently
      timeout: 5s       # Increased timeout for more complex check
      retries: 15       # More retries with shorter interval
      start_period: 10s # Allow more startup time for initialization
    profiles: ["ci"]

  database-prod:
    extends: database
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lessons_user3 -d lessons_marketplace_server"]
      interval: 2s      # Check more frequently
      timeout: 3s
      retries: 15       # More retries for production
      start_period: 10s
    profiles: ["prod"]

  server:
    build:
      context: ..
      dockerfile: docker/server/Dockerfile
    container_name: lessons-marketplace-server-${profile}
    restart: "no"
    ports:
      - "3000:3000"
    env_file:
      - ../env/.env.${profile}
    environment:
      - RUN_SEED=${RUN_SEED:-false}  # Control seed behavior
    profiles: ["ci", "prod"]
    # Base service should not have dependency on base database as it's not active

  server-ci:
    extends: server
    depends_on:
      database-ci:
        condition: service_healthy
        restart: true   # Restart dependency check if it fails
    environment:
      - DEBUG=true       # Enable debug mode for more verbose logging
      - RUN_SEED=${RUN_SEED:-true}  # Default to true for CI
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health | grep -q 'database.*connected' || exit 1"]
      interval: 5s      # Check more frequently
      timeout: 5s       # Increased timeout for more complex check
      retries: 15       # More retries to account for slow startup
      start_period: 20s # Longer start period to allow for database initialization
    restart: on-failure # Restart on failure
    volumes:
      - ../logs:/app/logs:rw # Mount logs volume with read-write permissions
    profiles: ["ci"]

  server-prod:
    extends: server
    depends_on:
      database-prod:
        condition: service_healthy
        restart: true   # Restart dependency check if it fails
    environment:
      - RUN_SEED=${RUN_SEED:-false}  # Default to false for production
    healthcheck:
      test: ["CMD", "curl", "-f", "https://lessons-marketplace-server.fly.dev/api/health"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 15s
    profiles: ["prod"]

  frontend:
    build:
      context: ..
      dockerfile: docker/frontend/Dockerfile
    container_name: lessons-marketplace-frontend-${profile}
    restart: "no"
    ports:
      - "5173:80"
    env_file:
      - ../env/.env.${profile}
    profiles: ["ci", "prod"]
    # Base service should not have dependencies on base services as they're not active

  frontend-ci:
    extends: frontend
    build:
      args:
        VITE_API_BASE_URL: http://server-ci:3000
    depends_on:
      server-ci:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/index.html"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    volumes:
      - ../logs:/usr/share/nginx/logs:rw # Mount logs volume with read-write permissions
    profiles: ["ci"]

  frontend-prod:
    extends: frontend
    build:
      args:
        VITE_API_BASE_URL: https://lessons-marketplace-server.fly.dev
    depends_on:
      server-prod:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "curl", "-f", "https://lessons-marketplace-frontend.fly.dev/index.html"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 15s
    profiles: ["prod"]

  # Test service using our dedicated test Dockerfile - standalone version
  test:
    build:
      context: ..
      dockerfile: docker/test/Dockerfile
    container_name: lessons-marketplace-test-${profile}
    environment:
      - JEST_JUNIT_OUTPUT_DIR=/app/test-results/
      - JEST_JUNIT_OUTPUT_NAME=junit.xml
      - PLAYWRIGHT_HEADLESS=true
      - SKIP_WEB_SERVER=true
      - MOCK_API=false
      - PLAYWRIGHT_TIMEOUT=30000
      - PLAYWRIGHT_ACTION_TIMEOUT=15000
      - PLAYWRIGHT_NAVIGATION_TIMEOUT=20000
      - FRONTEND_URL=http://frontend-ci:80
    depends_on:
      database-ci:
        condition: service_healthy
        restart: true
      server-ci:
        condition: service_healthy
        restart: true
      frontend-ci:
        condition: service_healthy
        restart: true
    volumes:
      - ../logs:/app/logs:rw # Mount logs volume with read-write permissions
    profiles: ["ci"]

volumes:
  postgres_data: