services:
  database:
    image: postgres:16
    container_name: lessons-marketplace-db
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U marcin -d lessons_marketplace"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    profiles: ["default", "test"]

  server:
    build:
      context: ..
      dockerfile: docker/server/Dockerfile
    container_name: lessons-marketplace-server
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - ./.env
    ports:
      - "3000:3000"
    volumes:
      - ../dist:/app/dist
      - ../node_modules:/app/node_modules
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    profiles: ["default", "test"]

  frontend:
    build:
      context: ..
      dockerfile: docker/frontend/Dockerfile
    container_name: lessons-marketplace-frontend
    restart: unless-stopped
    depends_on:
      - server
    env_file:
      - ./.env
    ports:
      - "5173:80"
    volumes:
      - ../dist:/app/dist
      - ../node_modules:/app/node_modules
    profiles: ["default", "test"]

  # Test service using our dedicated test Dockerfile - standalone version
  tests:
    build:
      context: ..
      dockerfile: docker/test.Dockerfile
    container_name: lessons-marketplace-tests
    profiles: ["test"]
    env_file:
      - ./.env
    environment:
      - JEST_JUNIT_OUTPUT_DIR=/app/test-results/
      - JEST_JUNIT_OUTPUT_NAME=junit.xml
      - FRONTEND_URL=${DOCKER_FRONTEND_URL}
      - SKIP_WEB_SERVER=true
      - MOCK_API=true
      - PLAYWRIGHT_HEADLESS=true
    volumes:
      - test-results:/app/test-results
      - playwright-report:/app/playwright-report
    ipc: host  # Recommended for Chrome to avoid memory issues

volumes:
  postgres_data:
  test-results:
  playwright-report:
  pnpm-store: # Add volume for pnpm store 