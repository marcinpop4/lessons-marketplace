Only create typescript files and avoid creating javascript files.

If there something wrong in code, I want to fail fast. Do not implement fallbacks.

Avoid using !important in css and make the rules work as a whole system.

Avoid hardcoding styles, variables etc, to keep the application well maintained.

Avoid inline css and javascript.

Do not increase test timeouts before asking me.

Do not infer statuses anywhere, if we need a status, it needs to be explicitly as a result of an event.

Keep business logic or calculations in the models, or service classes if multiple models are involved. Avoid business logic or calculations in the frontend.

Do not attempt an operation several times in APIs, if it fail, it fails. If I want to implement retry logic, I'll have it at a worker level.

Keep package.json organized in aplha order, whenever you change it