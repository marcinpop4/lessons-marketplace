// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Teacher model for instructors
model Teacher {
  id          String   @id @default(uuid())
  firstName   String
  lastName    String
  email       String   @unique
  phoneNumber String
  dateOfBirth DateTime

  // Relations
  lessonQuotes             LessonQuote[]
  teacherLessonHourlyRates TeacherLessonHourlyRate[]
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
}

// Student model for users who book lessons
model Student {
  id          String   @id @default(uuid())
  firstName   String
  lastName    String
  email       String   @unique
  phoneNumber String
  dateOfBirth DateTime

  // Relations
  lessonRequests LessonRequest[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

// Represents the types of lessons available
enum LessonType {
  VOICE
  GUITAR
  BASS
  DRUMS
}

// Mapping table for teacher hourly rates by lesson type
model TeacherLessonHourlyRate {
  id          String     @id @default(uuid())
  teacher     Teacher    @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  teacherId   String
  type        LessonType
  rateInCents Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@unique([teacherId, type])
}

// New model for lesson requests from students
model LessonRequest {
  id              String     @id @default(uuid())
  type            LessonType
  startTime       DateTime
  durationMinutes Int
  address         String

  // Student relationship
  student   Student @relation(fields: [studentId], references: [id])
  studentId String

  // Quotes associated with this request
  lessonQuotes LessonQuote[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// New model for quotes provided by teachers
model LessonQuote {
  id          String   @id @default(uuid())
  costInCents Int
  createdAt   DateTime @default(now())
  expiresAt   DateTime

  // Relationships
  lessonRequest   LessonRequest @relation(fields: [lessonRequestId], references: [id])
  lessonRequestId String
  teacher         Teacher       @relation(fields: [teacherId], references: [id])
  teacherId       String

  // Lessons created from this quote
  lessons Lesson[]

  updatedAt DateTime @updatedAt
}

// Lesson model representing a confirmed music lesson
model Lesson {
  id          String   @id @default(uuid())
  confirmedAt DateTime @default(now())

  // Reference to the accepted quote
  quote   LessonQuote @relation(fields: [quoteId], references: [id])
  quoteId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
