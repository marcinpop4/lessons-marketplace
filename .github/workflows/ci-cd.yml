name: GitHub CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: read
  checks: write
  id-token: write
  pages: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      PNPM_VERSION: 10.3.0  # Match local environment version
      profile: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetching all history to ensure lock file is included

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Clean Docker environment
        run: |
          export profile=ci
          docker builder prune -af
          docker system prune -af --volumes
          pnpm docker:clean

      - name: Deploy components
        id: deploy
        run: |
          export profile=ci
          export RUN_SEED=true
          pnpm docker:deploy:rebuild

      - name: Setup logs directory
        run: |
          mkdir -p logs
          chmod -R 777 logs
          echo "Created logs directory for storing debug and deployment logs"

      - name: Debug Docker environment
        if: always() # Run even if previous step fails
        run: |
          # Create logs directory with proper permissions
          chmod +x scripts/debug-docker.sh
          ./scripts/debug-docker.sh
          chmod -R 777 logs
          
          # Copy debug files to logs directory for artifact upload
          cp -r docker-debug-* logs/ 2>/dev/null || echo "No debug directory found"
          
          # If any debug files exist, list them
          echo "=== DEBUG FILES GENERATED ==="
          find logs -type f | sort

      - name: Upload debug logs
        uses: actions/upload-artifact@v4
        if: always() # Upload logs even if previous steps fail
        with:
          name: docker-debug-logs
          path: |
            logs/**/*.log
            logs/**/*.txt
            logs/**/*
          retention-days: 7
          if-no-files-found: warn # Don't fail the build if no logs are found

      - name: Run tests
        if: steps.deploy.outcome == 'success'
        run: export profile=ci && pnpm docker:test:rebuild