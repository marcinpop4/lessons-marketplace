{
  "name": "lessons-marketplace",
  "private": true,
  "scripts": {
    "build": "pnpm run build:frontend && pnpm run build:server",
    "build:frontend": "tsc --project frontend/config/tsconfig.app.json --skipLibCheck && VITE_TSCONFIG=frontend/config/tsconfig.app.json vite build --config frontend/config/vite.config.ts --emptyOutDir",
    "build:server": "pnpm run build:shared && tsc --project server/tsconfig.server.json --skipLibCheck",
    "build:shared": "tsc --project shared/tsconfig.shared.json --skipLibCheck",
    "clean": "rm -rf dist",
    "db:reset": "prisma migrate reset --force --schema=server/prisma/schema.prisma",
    "deploy:clean": "rm -f deploy.sh deploy-fly.sh prepare-deploy.sh",
    "dev": "cross-env VITE_TSCONFIG=frontend/config/tsconfig.app.json vite --config frontend/config/vite.config.ts --force",
    "dev:clear-cache": "rm -rf node_modules/.vite && cross-env VITE_TSCONFIG=frontend/config/tsconfig.app.json vite --config frontend/config/vite.config.ts --force",
    "dev:full": "concurrently \"pnpm run dev\" \"pnpm run dev:server\"",
    "dev:full:clear-cache": "concurrently \"pnpm run dev:clear-cache\" \"pnpm run dev:server\"",
    "dev:server": "tsx watch server/index.ts",
    "dev:server:debug": "cross-env DEBUG=true tsx watch server/index.ts",
    "docker:build": "tsx docker/scripts/build.ts",
    "docker:build:production": "tsx docker/scripts/build.ts --production",
    "docker:deploy": "tsx docker/scripts/deploy.ts",
    "docker:deploy:full": "pnpm docker:clean && pnpm docker:build && pnpm docker:deploy",
    "docker:deploy:production": "tsx docker/scripts/deploy.ts --production",
    "docker:clean": "tsx docker/scripts/cleanup.ts --all",
    "docker:clean:production": "tsx docker/scripts/cleanup.ts --all --production",
    "docker:clean:containers": "tsx docker/scripts/cleanup.ts",
    "docker:clean:volumes": "tsx docker/scripts/cleanup.ts --volumes",
    "docker:clean:images": "tsx docker/scripts/cleanup.ts --images",
    "docker:up": "docker compose --env-file .env -f docker/docker-compose.yml up -d",
    "docker:down": "docker compose --env-file .env -f docker/docker-compose.yml down",
    "docker:stop": "docker compose --env-file .env -f docker/docker-compose.yml stop",
    "docker:start": "docker compose --env-file .env -f docker/docker-compose.yml start",
    "docker:logs": "docker compose --env-file .env -f docker/docker-compose.yml logs -f",
    "docker:ps": "docker compose --env-file .env -f docker/docker-compose.yml ps",
    "docker:seed": "docker compose --env-file .env -f docker/docker-compose.yml exec server node dist/server/prisma/seed.js",
    "docker:migrate": "docker compose --env-file .env -f docker/docker-compose.yml exec server npx prisma migrate deploy --schema=server/prisma/schema.prisma",
    "docker:test": "tsx docker/scripts/docker-test.ts",
    "docker:test:setup": "pnpm docker:clean && pnpm docker:build && pnpm docker:deploy && sleep 5 && pnpm docker:migrate && pnpm docker:seed",
    "docker:test:full": "pnpm docker:test:setup && SKIP_WEB_SERVER=true PLAYWRIGHT_TIMEOUT=10000 PLAYWRIGHT_ACTION_TIMEOUT=10000 PLAYWRIGHT_NAVIGATION_TIMEOUT=10000 FRONTEND_URL=$(grep FRONTEND_URL .env | cut -d '=' -f2) pnpm test:e2e",
    "docker:test:pattern": "pnpm docker:test:setup && SKIP_WEB_SERVER=true PLAYWRIGHT_TIMEOUT=10000 PLAYWRIGHT_ACTION_TIMEOUT=10000 PLAYWRIGHT_NAVIGATION_TIMEOUT=10000 FRONTEND_URL=$(grep FRONTEND_URL .env | cut -d '=' -f2) npx playwright test --grep",
    "fly:deploy": "tsx docker/scripts/deploy-fly.ts",
    "fly:deploy:production": "tsx docker/scripts/deploy-fly.ts --production",
    "fly:deploy:server": "tsx docker/scripts/deploy-fly.ts --skip-frontend",
    "fly:deploy:frontend": "tsx docker/scripts/deploy-fly.ts --skip-server --skip-migrations",
    "fly:deploy:skip-build": "tsx docker/scripts/deploy-fly.ts --skip-build",
    "fly:deploy:skip-migrations": "tsx docker/scripts/deploy-fly.ts --skip-migrations",
    "lint": "eslint .",
    "migrate:production": "node dist/server/prisma/migrate-deploy.js",
    "prebuild": "pnpm run clean",
    "prebuild:shared": "pnpm prisma:generate",
    "prisma:generate": "prisma generate --schema=server/prisma/schema.prisma",
    "prisma:migrate": "prisma migrate dev --schema=server/prisma/schema.prisma",
    "prisma:seed": "tsx server/prisma/seed.ts",
    "prisma:studio": "prisma studio --schema=server/prisma/schema.prisma",
    "start": "node dist/server/index.js",
    "start:frontend": "VITE_TSCONFIG=frontend/config/tsconfig.app.json vite preview --config frontend/config/vite.config.ts",
    "start:js": "node dist/server/index.js",
    "start:ts": "tsx server/index.ts",
    "swagger:server": "tsx api-docs/serve-swagger.ts",
    "test": "tsx scripts/run-tests.ts",
    "test:all": "tsx scripts/run-all-tests.ts",
    "test:unit": "tsx scripts/run-tests.ts tests/unit",
    "test:e2e": "playwright test --reporter=list",
    "test:e2e:html": "playwright test",
    "test:install-deps": "tsx scripts/install-jest-deps.ts"
  },
  "dependencies": {
    "@tailwindcss/oxide-darwin-arm64": "^4.0.15",
    "@tailwindcss/oxide-darwin-x64": "^4.0.15",
    "@tailwindcss/oxide-linux-arm64-gnu": "^4.0.15",
    "@tailwindcss/oxide-linux-x64-gnu": "^4.0.15",
    "amqplib": "^0.10.3",
    "axios": "^1.8.3",
    "bcrypt": "^5.1.1",
    "bcryptjs": "^2.4.3",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.18.3",
    "helmet": "^7.1.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "pg": "^8.14.0",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-router-dom": "^6.30.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@jest/globals": "^29.7.0",
    "@playwright/test": "1.51.1",
    "@prisma/client": "^6.5.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@types/amqplib": "^0.10.4",
    "@types/bcrypt": "^5.0.2",
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cookie-parser": "^1.4.8",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.17.24",
    "@types/pg": "^8.11.2",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@vitejs/plugin-react": "^4.3.4",
    "autoprefixer": "^10.4.21",
    "chokidar-cli": "^3.0.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "cursor-tools": "latest",
    "date-fns": "^4.1.0",
    "dotenv-cli": "^8.0.0",
    "eslint": "^9.21.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "lightningcss-darwin-arm64": "^1.29.2",
    "lightningcss-darwin-x64": "^1.29.2",
    "lightningcss-linux-arm64-gnu": "^1.29.2",
    "lightningcss-linux-x64-gnu": "^1.29.2",
    "postcss": "^8.5.3",
    "prisma": "^6.5.0",
    "tailwindcss": "^4.0.15",
    "ts-jest": "^29.3.0",
    "tsx": "^4.7.1",
    "typescript": "~5.7.2",
    "typescript-eslint": "^8.24.1",
    "vite": "^6.2.0"
  },
  "type": "module",
  "version": "0.0.0"
}
