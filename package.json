{
  "name": "lessons-marketplace",
  "private": true,
  "scripts": {
    "build": "pnpm run build:frontend && pnpm run build:server",
    "build:frontend": "tsc --project frontend/tsconfig.app.json --skipLibCheck && vite build --config frontend/vite.config.ts",
    "build:server": "pnpm run build:shared && tsc --project server/tsconfig.server.json --skipLibCheck",
    "build:shared": "tsc --project shared/tsconfig.shared.json --skipLibCheck",
    "clean": "rm -rf dist",
    "db:reset": "prisma migrate reset --force --schema=server/prisma/schema.prisma",
    "deploy:clean": "rm -f deploy.sh deploy-fly.sh prepare-deploy.sh",
    "deploy:fly": "tsx deploy.ts",
    "deploy:fly:with-db": "tsx deploy.ts --with-db",
    "dev": "vite --config frontend/vite.config.ts --force",
    "dev:clear-cache": "rm -rf node_modules/.vite && vite --config frontend/vite.config.ts --force",
    "dev:full": "concurrently \"npm run dev\" \"npm run dev:server\"",
    "dev:full:clear-cache": "concurrently \"npm run dev:clear-cache\" \"npm run dev:server\"",
    "dev:server": "tsx watch server/index.ts",
    "dev:server:debug": "DEBUG=true tsx watch server/index.ts",
    "docker:build": "docker-compose -f compose.yaml build",
    "docker:down": "docker-compose -f compose.yaml down",
    "docker:logs": "docker-compose -f compose.yaml logs -f",
    "docker:rebuild": "docker-compose -f compose.yaml build --no-cache",
    "docker:seed": "docker-compose -f compose.yaml exec api npx tsx server/prisma/seed.ts",
    "docker:test": "npm run docker:up && echo 'Waiting for services to start...' && sleep 10 && npm run docker:seed && cross-env RUNNING_IN_DOCKER=true TEST_BASE_URL=http://localhost:5173 npm run test:e2e",
    "docker:test:interactive": "npm run docker:test && node -e \"const readline = require('readline').createInterface({input: process.stdin, output: process.stdout}); readline.question('Tests complete. Keep Docker services running? (y/n) ', answer => {if(answer.toLowerCase() !== 'y') {require('child_process').execSync('npm run docker:down', {stdio: 'inherit'})} readline.close()})\"",
    "docker:up": "docker-compose -f compose.yaml up -d",
    "lint": "eslint .",
    "prebuild": "pnpm run clean",
    "prebuild:shared": "pnpm prisma:generate",
    "prisma:generate": "prisma generate --schema=server/prisma/schema.prisma",
    "prisma:migrate": "prisma migrate dev --schema=server/prisma/schema.prisma",
    "prisma:seed": "tsx server/prisma/seed.ts",
    "prisma:studio": "prisma studio --schema=server/prisma/schema.prisma",
    "start": "node dist/server/index.js",
    "start:frontend": "vite preview --config frontend/vite.config.ts --outDir ../dist/frontend",
    "start:js": "node dist/server/index.js",
    "start:ts": "tsx server/entrypoint.ts",
    "swagger:server": "tsx api-docs/serve-swagger.ts",
    "test:e2e": "playwright test --reporter=list",
    "test:e2e:html": "playwright test"
  },
  "dependencies": {
    "@tailwindcss/oxide-linux-arm64-gnu": "^4.0.15",
    "amqplib": "^0.10.3",
    "axios": "^1.8.3",
    "bcrypt": "^5.1.1",
    "bcryptjs": "^2.4.3",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.18.3",
    "helmet": "^7.1.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "pg": "^8.11.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-router-dom": "^6.30.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@playwright/test": "1.51.1",
    "@prisma/client": "^6.5.0",
    "@types/amqplib": "^0.10.4",
    "@types/bcrypt": "^5.0.2",
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cookie-parser": "^1.4.8",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.17.24",
    "@types/pg": "^8.11.2",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@vitejs/plugin-react": "^4.3.4",
    "autoprefixer": "^10.4.21",
    "chokidar-cli": "^3.0.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "cursor-tools": "latest",
    "date-fns": "^4.1.0",
    "eslint": "^9.21.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "lightningcss-linux-arm64-gnu": "^1.29.2",
    "postcss": "^8.5.3",
    "prisma": "^6.5.0",
    "tailwindcss": "^4.0.15",
    "tsx": "^4.7.1",
    "typescript": "~5.7.2",
    "typescript-eslint": "^8.24.1",
    "vite": "^6.2.0"
  },
  "type": "module",
  "version": "0.0.0"
}
